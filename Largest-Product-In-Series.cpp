#include <iostream>
#include <string>

// Computes largest 5 consecutive digit product in a series with very large numbers

void moveLeft(int (&arr)[5]);
// Moves each number in array one index to the left
// Note: arr[4] remains unchanged

void outputArray(int arr[5]);
// Outputs every digit in array
// Only for testing purposes

int transferAndProduct(std::string num, int i, int (&arr)[5]);
// Transfers from string to int array
// Also moves array along to left and finds product


int main(){
	
	std::string num;
	num="7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
	int arr[5] = {(num[0]-48), (num[1]-48), (num[2]-48), (num[3]-48), (num[4]-48)};
	int current=(arr[0]*arr[1]*arr[2]*arr[3]*arr[4]);
	for (int i=5; i<1000; i++){
		int temp=transferAndProduct(num, i, arr);
		if (temp > current){
			current = temp;
		}
	}
	std::cout << current;
	
	return 0;
}

void moveLeft(int (&arr)[5]){
	arr[0]=arr[1];
	arr[1]=arr[2];
	arr[2]=arr[3];
	arr[3]=arr[4];
}


void outputArray(int arr[5]){
	for (int i=0; i<5; i++){
		std::cout << arr[i] << " ";
	}
}

int transferAndProduct(std::string num, int i, int (&arr)[5]){
	moveLeft(arr);
	arr[4] = num[i] - 48;
	return (arr[0]*arr[1]*arr[2]*arr[3]*arr[4]);
}
